map $sent_http_content_type $expires {
    "text/html"                 epoch;
    "text/html; charset=utf-8"  epoch;
    default                     off;
}

server {
  listen 80;
  server_name role-based-jwt-authorization-with-express-and-vue-test-task.site;
  root /usr/share/nginx/html;
  index index.html;
  access_log /log/access.log main;
  error_log /log/error.log;

  server_tokens off;

  gzip on;
  gzip_comp_level 5;
  gzip_disable "msie6";
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

  location / {
    return 301 https://role-based-jwt-authorization-with-express-and-vue-test-task.site$request_uri;
  }

  location ~* ^.+.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2)$ {
    return 301 https://role-based-jwt-authorization-with-express-and-vue-test-task.site$request_uri;
  }

  location = /favicon.ico {
    log_not_found off;
    access_log off;
  }

  location = /robots.txt {
    rewrite ^ /robots.txt break;
    allow all;
    log_not_found off;
    access_log off;
  }

  location ~ /\.ht {
    deny all;
  }
}

server {
   listen  80;
   server_name  www.role-based-jwt-authorization-with-express-and-vue-test-task.site;
   rewrite ^ https://role-based-jwt-authorization-with-express-and-vue-test-task.site$request_uri? permanent;
}

server {
  listen 443 ssl http2;
  server_name role-based-jwt-authorization-with-express-and-vue-test-task.site;
  root /usr/share/nginx/html;
  index index.html;
  access_log /log/ssl-access.log main;
  error_log /log/ssl-error.log;

  server_tokens off;

  gzip on;
  gzip_comp_level 5;
  gzip_disable "msie6";
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

  keepalive_timeout           60;
  ssl_certificate             /cert/fullchain.pem;
  ssl_certificate_key         /cert/privkey.pem;
  ssl_protocols               TLSv1.2 TLSv1.3;
  ssl_ciphers                 "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
  ssl_dhparam                 /cert/dhparam.pem;
  add_header                  Strict-Transport-Security 'max-age=15552001';

  ssl_session_cache shared:ssl_session_cache:10m;
  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_trusted_certificate /cert/chain.pem;
  resolver 8.8.8.8 8.8.4.4 valid=300s;
  resolver_timeout 10s;

  location ~* ^.+.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2)$ {
    access_log off;
    expires max;
  }

  location = /favicon.ico {
    log_not_found off;
    access_log off;
  }

  location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
  }

  location ~ /\.ht {
    deny all;
  }

 location /api/ {
    proxy_pass http://backend:8081/;
 }

  location / {
    try_files $uri $uri/ /index.html;

    expires $expires;

    proxy_redirect                      off;
    proxy_set_header Host               $host;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  $scheme;
    proxy_read_timeout          1m;
    proxy_connect_timeout       1m;
  }
}

server {
  listen  443 ssl http2;
  server_name  www.role-based-jwt-authorization-with-express-and-vue-test-task.site;
  rewrite ^ https://role-based-jwt-authorization-with-express-and-vue-test-task.site$request_uri? permanent;
}
