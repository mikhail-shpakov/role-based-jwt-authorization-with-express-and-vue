version: '3.7'

services:
  frontend:
    image: nginx:stable-alpine
    restart: always
    build:
      context: .
      dockerfile: ./client/Dockerfile
    volumes:
      - /etc/letsencrypt/live/role-based-jwt-authorization-with-express-and-vue-test-task.site/fullchain.pem:/cert/fullchain.pem
      - /etc/letsencrypt/live/role-based-jwt-authorization-with-express-and-vue-test-task.site/privkey.pem:/cert/privkey.pem
      - /etc/letsencrypt/live/role-based-jwt-authorization-with-express-and-vue-test-task.site/chain.pem:/cert/chain.pem
      - /etc/ssl/certs/dhparam.pem:/cert/dhparam.pem
    ports:
      - 80:80
      - 443:443
    networks:
      public:

  backend:
    image: node:lts-alpine
    restart: always
    build:
      context: .
      dockerfile: ./server/Dockerfile
    networks:
      public:

  db:
    image: postgres:12.1-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: lD%$Y%XUaW$lc6Hg
    volumes:
      - /postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      public:

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      public:

networks:
  public:
    driver: bridge
